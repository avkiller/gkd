name: Build-Apk

on:
  workflow_dispatch:

  # push:
  #   branches:
  #     - '**'
  #   paths-ignore:
  #     - 'LICENSE'
  #     - '*.md'
  #     - '.github/**'
env:
  # Our build metadata
  # NDK_VERSION: "r28"
  TAG_NAME: "nightly"
  VERSION: "1.10.4"

jobs:
  build:
    if: ${{ !startsWith(github.event.head_commit.message, 'chore:') && !startsWith(github.event.head_commit.message, 'chore(') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: write gkd secrets info
        run: |
          echo ${{ secrets.GKD_STORE_FILE_BASE64 }} | base64 --decode > ${{ github.workspace }}/gkd.jks
          echo GKD_STORE_FILE='${{ github.workspace }}/gkd.jks' >> gradle.properties
          echo GKD_STORE_PASSWORD='${{ secrets.GKD_STORE_PASSWORD }}' >> gradle.properties
          echo GKD_KEY_ALIAS='${{ secrets.GKD_KEY_ALIAS }}' >> gradle.properties
          echo GKD_KEY_PASSWORD='${{ secrets.GKD_KEY_PASSWORD }}' >> gradle.properties

      - run: chmod 777 ./gradlew
      - run: ./gradlew app:assembleGkd

      - uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: app/build/outputs

      - uses: actions/upload-artifact@v4
        with:
          name: release
          path: app/build/outputs/apk/gkd/release
          
      - name: Get tag version
        run: |
          # 如果是手动触发 (workflow_dispatch)
          if [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
            # 获取所有 Tag（确保包含远程 Tag）
            git fetch --tags
            # 按版本号排序获取最新 Tag（兼容语义化版本）
            LATEST_TAG=$(git tag --sort=-v:refname | head -n 1 || echo "nightly")

            # 去掉 Tag 名称中的 'v' 前缀
            VERSION="${LATEST_TAG}"
          else
           # 原有逻辑：从推送的 Tag 中提取版本号
           TAG_VERSION="${GITHUB_REF##*/}"
           VERSION="${TAG_VERSION}"
          fi

          # 处理无 Tag 的情况（可选：报错或默认值）
          if [ -z "$VERSION" ]; then
            echo "::error::No valid tag found!"
            VERSION="0.0.0"
          fi

          # 将信息写入环境变量
          echo "TAG_NAME=$LATEST_TAG" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Copy sign APK
        shell: bash
        run: |
          mv app/build/outputs/apk/gkd/release/app-gkd-release.apk app/build/outputs/apk/gkd/release/gkd-${{ env.VERSION }}.apk

      - name: Publish signed apk package
        # if: env.ANDROID_SIGNING_KEY != null && env.UPLOAD_ARTIFACT == 'true'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            app/build/outputs/apk/gkd/release/gkd-${{ env.VERSION }}.apk

